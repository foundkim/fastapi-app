name: Model Deployment

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py') --fail-under 7

  deploy:
      environment: Global
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - name: Set up Docker
          run: |
            # Add Docker's official GPG key:
            sudo apt-get update
            sudo apt-get install ca-certificates curl
            sudo install -m 0755 -d /etc/apt/keyrings
            sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
            sudo chmod a+r /etc/apt/keyrings/docker.asc

            # Add the repository to Apt sources:
            echo \
              "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
              $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
              sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update

            sudo apt-get install docker-ce docker-ce-cli
        
        
        - name: Build Docker Image
          run: |
             export IMAGE="${{vars.DOCKER_USER}}/ml-service:latest" 
             docker build -t $IMAGE .
        
        - name: Push Docker Image on Docker Hub
          run: |
            docker login -u ${{vars.DOCKER_USER}} -p ${{secrets.DOCKER_PASSWORD}}
            docker push $IMAGE 
 
